"""
1. Реализовать функцию, принимающую
два числа (позиционные аргументы) и
выполняющую их деление. Числа
запрашивать у пользователя,
предусмотреть обработку ситуации
деления на ноль.
"""


def d_calc():
    try:
        number_1 = int(input("Введите первое число >>> "))
        number_2 = int(input("Введите второе число >>> "))
        result = number_1 / number_2

    except ZeroDivisionError:
        return "Введите число не равное 0, т.к. на 0 делить нельзя"

    return result


print(d_calc())


"""
2. Реализовать функцию, принимающую несколько
параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания,
email, телефон. Функция должна принимать
параметры как именованные аргументы.
Реализовать вывод данных о пользователе
одной строкой.
"""

name = input("Введите Ваше имя >>> ")
surname = input("Введите Вашу фамилию >>> ")
year = input("Введите Ваш возраст >>> ")
city = input("Введите Ваш город >>> ")
email = input("Введите Ваш email >>> ")
number = input("Введите Ваш номер телефона >>> ")


def my_func(name, surname, year, city, email, number):
    print(f"Имя - {name}; Фамилия - {surname}; "
          f"Возрвст - {year}; Город - {city}; "
          f"Эл.почта - {email}; Телефон - {number}")


my_func(name, surname, year, city, email, number)


"""
3. Реализовать функцию my_func(), которая
принимает три позиционных аргумента, и
возвращает сумму наибольших двух аргументов.
"""


def my_func():
    number_1 = int(input("Введите первое число >>> "))
    number_2 = int(input("Введите второе число >>> "))
    number_3 = int(input("Введите третье число >>> "))

    a = [number_1, number_2, number_3]
    a.sort()
    b = sum(a[-2:])

    return b


print(my_func())


"""
4. Программа принимает действительное
положительное число x и целое отрицательное
число y. Необходимо выполнить возведение
числа x в степень y. Задание необходимо
реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись
без встроенной функции возведения числа
 в степень.
** Подсказка:** попробуйте решить задачу
двумя способами. Первый — возведение в
степень с помощью оператора **. Второй —
более сложная реализация без оператора **,
предусматривающая использование цикла.
"""


# Первый вариант решения
def my_func():
    x = float(input("Введите первое число >>> "))
    y = int(input("Введите второе число >>> "))
    result = (x ** y)
    return result


print(my_func())

# Второй вариант решения
def my_func():
    x_3 = float(input("Введите первое число >>> "))
    y_3 = int(input("Введите второе число >>> "))

    result_3 = 1
    for i in range(abs(y_3)):
        result_3 *= x_3
    if y_3 >= 0:
        return result_3
    else:
        return 1 / result_3


print(my_func())

# Третий вариант решения
x_2 = float(input("Введите первое число >>> "))
y_2 = int(input("Введите второе число >>> "))
print(pow(x_2, y_2))


"""
6. Реализовать функцию int_func(), принимающую
слово из маленьких латинских букв и возвращающую
его же, но с прописной первой буквой. Например,
print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна
попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем
регистре. Сделать вывод исходной строки, но
каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию
int_func().
"""


def int_func():
    word = str(input("Введите слова >>> "))
    return word.title()


print(int_func())

